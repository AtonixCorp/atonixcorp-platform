version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: atonixcorp_db
    environment:
      POSTGRES_DB: atonixcorp
      POSTGRES_USER: atonixcorp_user
      POSTGRES_PASSWORD: atonixcorp_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - atonixcorp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atonixcorp_user -d atonixcorp"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: atonixcorp_redis
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - atonixcorp_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: atonixcorp_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn atonixcorp.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://atonixcorp_user:atonixcorp_password@db:5432/atonixcorp
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,nginx
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - atonixcorp_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: atonixcorp_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - REACT_APP_ENVIRONMENT=production
    depends_on:
      - backend
    networks:
      - atonixcorp_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: atonixcorp_nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - atonixcorp_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker (for background tasks)
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: atonixcorp_celery
    command: celery -A atonixcorp worker --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://atonixcorp_user:atonixcorp_password@db:5432/atonixcorp
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - atonixcorp_network

  # Celery Beat (for scheduled tasks)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: atonixcorp_celery_beat
    command: celery -A atonixcorp beat --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://atonixcorp_user:atonixcorp_password@db:5432/atonixcorp
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - atonixcorp_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  atonixcorp_network:
    driver: bridge