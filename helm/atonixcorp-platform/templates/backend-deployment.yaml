{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "atonixcorp-platform.fullname" . }}-backend
  labels:
    {{- include "atonixcorp-platform.backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "atonixcorp-platform.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/backend-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/backend-secret.yaml") . | sha256sum }}
      labels:
        {{- include "atonixcorp-platform.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "atonixcorp-platform.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: migrate
        image: {{ include "atonixcorp-platform.backend.image" . }}
        command: ["python", "manage.py", "migrate"]
        envFrom:
        - configMapRef:
            name: {{ include "atonixcorp-platform.fullname" . }}-backend-config
        - secretRef:
            name: {{ include "atonixcorp-platform.fullname" . }}-backend-secret
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      containers:
      - name: backend
        image: {{ include "atonixcorp-platform.backend.image" . }}
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "atonixcorp-platform.fullname" . }}-backend-config
        - secretRef:
            name: {{ include "atonixcorp-platform.fullname" . }}-backend-secret
        {{- if .Values.backend.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.backend.livenessProbe.httpGet.path }}
            port: {{ .Values.backend.livenessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
        {{- end }}
        {{- if .Values.backend.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.backend.readinessProbe.httpGet.path }}
            port: {{ .Values.backend.readinessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds }}
        {{- end }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        volumeMounts:
        - name: static-files
          mountPath: /app/staticfiles
        {{- if .Values.persistence.media.enabled }}
        - name: media-files
          mountPath: /app/media
        {{- end }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      volumes:
      - name: static-files
        emptyDir: {}
      {{- if .Values.persistence.media.enabled }}
      - name: media-files
        persistentVolumeClaim:
          claimName: {{ include "atonixcorp-platform.fullname" . }}-media
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          {{- if eq .Values.podAntiAffinity.type "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "atonixcorp-platform.name" . }}
              - key: app.kubernetes.io/component
                operator: In
                values:
                - backend
            topologyKey: kubernetes.io/hostname
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "atonixcorp-platform.name" . }}
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname
          {{- end }}
      {{- end }}
{{- end }}