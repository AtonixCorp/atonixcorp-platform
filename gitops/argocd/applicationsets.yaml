# ArgoCD ApplicationSet for Multi-Environment Deployment
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: atonixcorp-platform-environments
  namespace: argocd
  labels:
    app: atonixcorp-platform
spec:
  generators:
  - list:
      elements:
      - cluster: in-cluster
        url: https://kubernetes.default.svc
        environment: development
        namespace: atonixcorp-dev
        branch: develop
        project: atonixcorp-platform
        valueFile: values-dev.yaml
        autoSync: true
        selfHeal: true
      - cluster: in-cluster
        url: https://kubernetes.default.svc
        environment: staging
        namespace: atonixcorp-staging
        branch: main
        project: atonixcorp-platform
        valueFile: values-staging.yaml
        autoSync: true
        selfHeal: false
      - cluster: in-cluster
        url: https://kubernetes.default.svc
        environment: production
        namespace: atonixcorp
        branch: main
        project: production
        valueFile: values-prod.yaml
        autoSync: false
        selfHeal: false
  
  template:
    metadata:
      name: 'atonixcorp-platform-{{environment}}'
      labels:
        app: atonixcorp-platform
        environment: '{{environment}}'
    spec:
      project: '{{project}}'
      source:
        repoURL: https://github.com/atonixcorp/platform.git
        targetRevision: '{{branch}}'
        path: helm/atonixcorp-platform
        helm:
          valueFiles:
            - values.yaml
            - '{{valueFile}}'
          parameters:
            - name: environment
              value: '{{environment}}'
      destination:
        server: '{{url}}'
        namespace: '{{namespace}}'
      syncPolicy:
        automated:
          prune: '{{autoSync}}'
          selfHeal: '{{selfHeal}}'
        syncOptions:
          - CreateNamespace=true
          - PrunePropagationPolicy=foreground
        retry:
          limit: 3
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
---
# ArgoCD ApplicationSet for Feature Branches
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: atonixcorp-platform-feature-branches
  namespace: argocd
  labels:
    app: atonixcorp-platform
    type: feature-branch
spec:
  generators:
  - pullRequest:
      github:
        owner: atonixcorp
        repo: platform
        tokenRef:
          secretName: github-token
          key: token
      requeueAfterSeconds: 30
  
  template:
    metadata:
      name: 'atonixcorp-platform-pr-{{number}}'
      labels:
        app: atonixcorp-platform
        type: feature-branch
        pr-number: '{{number}}'
      annotations:
        link.argocd.argoproj.io/external-link: '{{url}}'
    spec:
      project: atonixcorp-platform
      source:
        repoURL: https://github.com/atonixcorp/platform.git
        targetRevision: '{{head_sha}}'
        path: helm/atonixcorp-platform
        helm:
          valueFiles:
            - values.yaml
            - values-dev.yaml
          parameters:
            - name: environment
              value: pr-{{number}}
            - name: backend.image.tag
              value: pr-{{number}}-{{head_sha}}
            - name: frontend.image.tag
              value: pr-{{number}}-{{head_sha}}
            - name: ingress.hosts[0].host
              value: pr-{{number}}.dev.atonixcorp.com
      destination:
        server: https://kubernetes.default.svc
        namespace: 'atonixcorp-pr-{{number}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - PrunePropagationPolicy=foreground
        retry:
          limit: 2
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 1m
      # Cleanup after PR is closed
      info:
        - name: 'Pull Request'
          value: '{{url}}'
        - name: 'Author'
          value: '{{author}}'
      # Auto-delete when PR is closed/merged
      finalizers:
        - resources-finalizer.argocd.argoproj.io