apiVersion: v1
kind: Secret
metadata:
  name: django-secret
  namespace: atonixcorp
type: Opaque
data:
  # your-super-secret-key-change-in-production-with-50-chars-min (base64)
  SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9uLXdpdGgtNTAtY2hhcnMtbWlu
  # localhost,atonixcorp.com (base64)
  ALLOWED_HOSTS: bG9jYWxob3N0LGF0b25peGNvcnAuY29t
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: django-config
  namespace: atonixcorp
data:
  DEBUG: "False"
  DATABASE_URL: "postgresql://atonixcorp_user:atonixcorp_password@postgres:5432/atonixcorp"
  REDIS_URL: "redis://:redis_password@redis:6379/0"
  CORS_ALLOWED_ORIGINS: "https://atonixcorp.com,https://www.atonixcorp.com"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: atonixcorp
  labels:
    app: backend
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        component: api
    spec:
      initContainers:
      - name: migrate
        image: atonixcorp/backend:latest
        command: ["python", "manage.py", "migrate"]
        envFrom:
        - configMapRef:
            name: django-config
        - secretRef:
            name: django-secret
      containers:
      - name: backend
        image: atonixcorp/backend:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: django-config
        - secretRef:
            name: django-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: static-files
          mountPath: /app/staticfiles
        - name: media-files
          mountPath: /app/media
      volumes:
      - name: static-files
        emptyDir: {}
      - name: media-files
        persistentVolumeClaim:
          claimName: media-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
  namespace: atonixcorp
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: nfs
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: atonixcorp
  labels:
    app: backend
    component: api
spec:
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  selector:
    app: backend