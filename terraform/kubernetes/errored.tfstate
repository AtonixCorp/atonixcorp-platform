{
  "version": 4,
  "terraform_version": "1.13.3",
  "serial": 14,
  "lineage": "dcaa2025-3b41-1826-e2a6-be33254dcb7b",
  "outputs": {
    "application_info": {
      "value": {
        "app_version": "1.0.0",
        "autoscaling": true,
        "backup_enabled": true,
        "domain_name": "atonixcorp.org",
        "environment": "dev",
        "ingress_class": "nginx",
        "monitoring": false,
        "namespace": "atonixcorp-platform",
        "project_name": "atonixcorp-platform",
        "storage_class": "standard"
      },
      "type": [
        "object",
        {
          "app_version": "string",
          "autoscaling": "bool",
          "backup_enabled": "bool",
          "domain_name": "string",
          "environment": "string",
          "ingress_class": "string",
          "monitoring": "bool",
          "namespace": "string",
          "project_name": "string",
          "storage_class": "string"
        }
      ]
    },
    "backend_deployment_name": {
      "value": "atonixcorp-platform-dev-backend",
      "type": "string"
    },
    "backend_endpoints": {
      "value": {
        "admin": "/admin/",
        "api": "/api/",
        "health": "/api/health/",
        "ready": "/api/ready/"
      },
      "type": [
        "object",
        {
          "admin": "string",
          "api": "string",
          "health": "string",
          "ready": "string"
        }
      ]
    },
    "backend_service_name": {
      "value": "atonixcorp-platform-dev-backend",
      "type": "string"
    },
    "celery_beat_deployment_name": {
      "value": "atonixcorp-platform-dev-celery-beat",
      "type": "string"
    },
    "celery_worker_deployment_name": {
      "value": "atonixcorp-platform-dev-celery-worker",
      "type": "string"
    },
    "connection_info": {
      "value": {
        "external_urls": {
          "admin": "https://atonixcorp.org/admin",
          "api": "https://atonixcorp.org/api",
          "frontend": "https://atonixcorp.org"
        },
        "internal_services": {
          "backend_service": "atonixcorp-platform-dev-backend.atonixcorp-platform.svc.cluster.local",
          "frontend_service": "atonixcorp-platform-dev-frontend.atonixcorp-platform.svc.cluster.local",
          "postgresql_service": "atonixcorp-platform-dev-postgresql.atonixcorp-platform.svc.cluster.local",
          "redis_service": "atonixcorp-platform-dev-redis.atonixcorp-platform.svc.cluster.local",
          "zookeeper_service": "atonixcorp-platform-dev-zookeeper.atonixcorp-platform.svc.cluster.local"
        },
        "ports": {
          "backend": 8000,
          "frontend": 80,
          "postgresql": 5432,
          "redis": 6379,
          "zookeeper": 2181
        }
      },
      "type": [
        "object",
        {
          "external_urls": [
            "object",
            {
              "admin": "string",
              "api": "string",
              "frontend": "string"
            }
          ],
          "internal_services": [
            "object",
            {
              "backend_service": "string",
              "frontend_service": "string",
              "postgresql_service": "string",
              "redis_service": "string",
              "zookeeper_service": "string"
            }
          ],
          "ports": [
            "object",
            {
              "backend": "number",
              "frontend": "number",
              "postgresql": "number",
              "redis": "number",
              "zookeeper": "number"
            }
          ]
        }
      ]
    },
    "frontend_deployment_name": {
      "value": "atonixcorp-platform-dev-frontend",
      "type": "string"
    },
    "frontend_endpoints": {
      "value": {
        "admin": "/admin/",
        "api": "/api/",
        "app": "/",
        "health": "/health"
      },
      "type": [
        "object",
        {
          "admin": "string",
          "api": "string",
          "app": "string",
          "health": "string"
        }
      ]
    },
    "frontend_service_name": {
      "value": "atonixcorp-platform-dev-frontend",
      "type": "string"
    },
    "health_check_endpoints": {
      "value": {
        "backend_health": "https://atonixcorp.org/api/health/",
        "backend_ready": "https://atonixcorp.org/api/ready/",
        "database_health": "internal",
        "frontend_health": "https://atonixcorp.org/health",
        "redis_health": "internal"
      },
      "type": [
        "object",
        {
          "backend_health": "string",
          "backend_ready": "string",
          "database_health": "string",
          "frontend_health": "string",
          "redis_health": "string"
        }
      ]
    },
    "ingress_hostname": {
      "value": "atonixcorp.org",
      "type": "string"
    },
    "ingress_name": {
      "value": "atonixcorp-platform-dev-ingress",
      "type": "string"
    },
    "ingress_urls": {
      "value": {
        "admin": "https://atonixcorp.org/admin",
        "backend": "https://atonixcorp.org/api",
        "frontend": "https://atonixcorp.org"
      },
      "type": [
        "object",
        {
          "admin": "string",
          "backend": "string",
          "frontend": "string"
        }
      ]
    },
    "monitoring_enabled": {
      "value": false,
      "type": "bool"
    },
    "namespace_name": {
      "value": "atonixcorp-platform",
      "type": "string"
    },
    "postgresql_connection_url": {
      "value": "postgresql://atonixcorp:]JC_J_yfRvu1fGFixZb+d\u0026FxXZFRXyl+@atonixcorp-platform-dev-postgresql:5432/atonixcorp",
      "type": "string",
      "sensitive": true
    },
    "postgresql_secret_name": {
      "value": "atonixcorp-platform-dev-postgresql",
      "type": "string"
    },
    "postgresql_service_name": {
      "value": "atonixcorp-platform-dev-postgresql",
      "type": "string"
    },
    "redis_connection_url": {
      "value": "redis://atonixcorp-platform-dev-redis:6379",
      "type": "string",
      "sensitive": true
    },
    "redis_service_name": {
      "value": "atonixcorp-platform-dev-redis",
      "type": "string"
    },
    "resource_summary": {
      "value": {
        "configmaps": {
          "backend": "atonixcorp-platform-dev-backend-config",
          "frontend": "atonixcorp-platform-dev-frontend-config",
          "zookeeper": "atonixcorp-platform-dev-zookeeper-config"
        },
        "deployments": {
          "backend": "atonixcorp-platform-dev-backend",
          "celery_beat": "atonixcorp-platform-dev-celery-beat",
          "celery_worker": "atonixcorp-platform-dev-celery-worker",
          "frontend": "atonixcorp-platform-dev-frontend",
          "postgresql": "atonixcorp-platform-dev-postgresql",
          "redis": "atonixcorp-platform-dev-redis",
          "zookeeper": "atonixcorp-platform-dev-zookeeper"
        },
        "persistent_volumes": {
          "media": "atonixcorp-platform-dev-backend-media",
          "postgresql": "atonixcorp-platform-dev-postgresql-data",
          "redis": "atonixcorp-platform-dev-redis-data",
          "zookeeper_data": "atonixcorp-platform-dev-zookeeper-data",
          "zookeeper_logs": "atonixcorp-platform-dev-zookeeper-logs"
        },
        "secrets": {
          "django": "atonixcorp-platform-dev-backend",
          "postgresql": "atonixcorp-platform-dev-postgresql"
        },
        "services": {
          "backend": "atonixcorp-platform-dev-backend",
          "frontend": "atonixcorp-platform-dev-frontend",
          "postgresql": "atonixcorp-platform-dev-postgresql",
          "redis": "atonixcorp-platform-dev-redis",
          "zookeeper": "atonixcorp-platform-dev-zookeeper"
        }
      },
      "type": [
        "object",
        {
          "configmaps": [
            "object",
            {
              "backend": "string",
              "frontend": "string",
              "zookeeper": "string"
            }
          ],
          "deployments": [
            "object",
            {
              "backend": "string",
              "celery_beat": "string",
              "celery_worker": "string",
              "frontend": "string",
              "postgresql": "string",
              "redis": "string",
              "zookeeper": "string"
            }
          ],
          "persistent_volumes": [
            "object",
            {
              "media": "string",
              "postgresql": "string",
              "redis": "string",
              "zookeeper_data": "string",
              "zookeeper_logs": "string"
            }
          ],
          "secrets": [
            "object",
            {
              "django": "string",
              "postgresql": "string"
            }
          ],
          "services": [
            "object",
            {
              "backend": "string",
              "frontend": "string",
              "postgresql": "string",
              "redis": "string",
              "zookeeper": "string"
            }
          ]
        }
      ]
    },
    "zookeeper_admin_url": {
      "value": "http://atonixcorp-platform-dev-zookeeper:8080",
      "type": "string"
    },
    "zookeeper_connection_string": {
      "value": "atonixcorp-platform-dev-zookeeper:2181",
      "type": "string"
    },
    "zookeeper_service_name": {
      "value": "atonixcorp-platform-dev-zookeeper",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "frontend",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "GENERATE_SOURCEMAP": "false",
              "NODE_ENV": "production",
              "REACT_APP_API_URL": "https://api.atonixcorp.org",
              "REACT_APP_ENVIRONMENT": "dev",
              "REACT_APP_VERSION": "1.0.0",
              "nginx.conf": "user nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log notice;\npid /var/run/nginx.pid;\n      \nevents {\n    worker_connections 1024;\n    use epoll;\n    multi_accept on;\n}\n      \nhttp {\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n          \n    # Logging\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n                   '$status $body_bytes_sent \"$http_referer\" '\n                   '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n          \n    access_log /var/log/nginx/access.log main;\n          \n    # Performance\n    sendfile on;\n    tcp_nopush on;\n    tcp_nodelay on;\n    keepalive_timeout 65;\n    types_hash_max_size 2048;\n          \n    # Gzip compression\n    gzip on;\n    gzip_vary on;\n    gzip_min_length 1024;\n    gzip_proxied any;\n    gzip_comp_level 6;\n    gzip_types\n        text/plain\n        text/css\n        text/xml\n        text/javascript\n        application/json\n        application/javascript\n        application/xml+rss\n        application/atom+xml\n        image/svg+xml;\n          \n    # Security headers\n    add_header X-Frame-Options \"SAMEORIGIN\" always;\n    add_header X-Content-Type-Options \"nosniff\" always;\n    add_header X-XSS-Protection \"1; mode=block\" always;\n    add_header Referrer-Policy \"no-referrer-when-downgrade\" always;\n    add_header Content-Security-Policy \"default-src 'self' http: https: data: blob: 'unsafe-inline'\" always;\n          \n    server {\n        listen 80;\n        server_name _;\n        root /usr/share/nginx/html;\n        index index.html;\n              \n        # Health check endpoint\n        location /health {\n            access_log off;\n            return 200 \"healthy\\n\";\n            add_header Content-Type text/plain;\n        }\n              \n        # API proxy\n        location /api/ {\n            proxy_pass https://api.atonixcorp.org/;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n                  \n            # Timeouts\n            proxy_connect_timeout 60s;\n            proxy_send_timeout 60s;\n            proxy_read_timeout 60s;\n                  \n            # Buffering\n            proxy_buffering on;\n            proxy_buffer_size 4k;\n            proxy_buffers 8 4k;\n            proxy_busy_buffers_size 8k;\n        }\n              \n        # Admin proxy\n        location /admin/ {\n            proxy_pass https://api.atonixcorp.org/admin/;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n                  \n            # Timeouts\n            proxy_connect_timeout 60s;\n            proxy_send_timeout 60s;\n            proxy_read_timeout 60s;\n        }\n              \n        # Static files with caching\n        location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {\n            expires 1y;\n            add_header Cache-Control \"public, immutable\";\n            try_files $uri =404;\n        }\n              \n        # React app - handle client-side routing\n        location / {\n            try_files $uri $uri/ /index.html;\n                  \n            # Cache control for HTML files\n            location ~* \\.(html)$ {\n                expires -1;\n                add_header Cache-Control \"no-cache, no-store, must-revalidate\";\n                add_header Pragma \"no-cache\";\n            }\n        }\n              \n        # Error pages\n        error_page 404 /index.html;\n        error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n            root /usr/share/nginx/html;\n        }\n    }\n}\n"
            },
            "id": "atonixcorp-platform/atonixcorp-platform-dev-frontend-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "frontend",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "react",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-frontend-config",
                "namespace": "atonixcorp-platform",
                "resource_version": "19595",
                "uid": "3dfad6f5-d00f-4c5d-8609-56f04ab5691b"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "ConfigMap",
            "name": "atonixcorp-platform-dev-frontend-config",
            "namespace": "atonixcorp-platform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "frontend",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-frontend",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 5,
                "labels": {
                  "app.kubernetes.io/component": "frontend",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "react",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-frontend",
                "namespace": "atonixcorp-platform",
                "resource_version": "19073",
                "uid": "9f882d96-1525-4bce-95ec-6a16706efbd7"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/component": "frontend",
                      "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                      "app.kubernetes.io/name": "react"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {
                          "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                          "atonixcorp.com/deployed-by": "terraform",
                          "atonixcorp.com/environment": "dev",
                          "atonixcorp.com/version": "1.0.0",
                          "prometheus.io/path": "/metrics",
                          "prometheus.io/port": "9113",
                          "prometheus.io/scrape": "true",
                          "terraform.io/managed": "true"
                        },
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app.kubernetes.io/component": "frontend",
                          "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                          "app.kubernetes.io/managed-by": "terraform",
                          "app.kubernetes.io/name": "react",
                          "app.kubernetes.io/part-of": "atonixcorp-platform",
                          "app.kubernetes.io/version": "1.0.0",
                          "environment": "dev",
                          "project": "atonixcorp-platform"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "POD_NAME",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              },
                              {
                                "name": "POD_NAMESPACE",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              }
                            ],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "atonixcorp-platform-dev-frontend-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "docker.io/nginx:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/health",
                                    "port": "80",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "name": "nginx",
                            "port": [
                              {
                                "container_port": 80,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "http",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/health",
                                    "port": "80",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 5,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 3
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "500m",
                                  "memory": "1Gi"
                                },
                                "requests": {
                                  "cpu": "100m",
                                  "memory": "256Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 30,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/health",
                                    "port": "80",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 10,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 3
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/nginx/nginx.conf",
                                "mount_propagation": "None",
                                "name": "nginx-config",
                                "read_only": false,
                                "sub_path": "nginx.conf",
                                "sub_path_expr": ""
                              }
                            ],
                            "working_dir": ""
                          },
                          {
                            "args": [
                              "-nginx.scrape-uri=http://localhost:80/nginx_status"
                            ],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "nginx/nginx-prometheus-exporter:0.10.0",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/metrics",
                                    "port": "9113",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 30,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "name": "nginx-exporter",
                            "port": [
                              {
                                "container_port": 9113,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "metrics",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "200m",
                                  "memory": "256Mi"
                                },
                                "requests": {
                                  "cpu": "50m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [
                          {
                            "fs_group": "",
                            "fs_group_change_policy": "",
                            "run_as_group": "101",
                            "run_as_non_root": true,
                            "run_as_user": "101",
                            "se_linux_options": [],
                            "seccomp_profile": [],
                            "supplemental_groups": [],
                            "sysctl": [],
                            "windows_options": []
                          }
                        ],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "atonixcorp-platform-dev-frontend-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "nginx-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "apps/v1",
            "kind": "Deployment",
            "name": "atonixcorp-platform-dev-frontend",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.frontend.kubernetes_config_map.frontend",
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "kubernetes_pod_disruption_budget_v1",
      "name": "frontend",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-frontend-pdb",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app.kubernetes.io/component": "frontend",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "react",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-frontend-pdb",
                "namespace": "atonixcorp-platform",
                "resource_version": "5096",
                "uid": "8028c1a7-0787-461e-9fe2-20857545b2f9"
              }
            ],
            "spec": [
              {
                "max_unavailable": "",
                "min_available": "50%",
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/component": "frontend",
                      "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                      "app.kubernetes.io/name": "react"
                    }
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "frontend",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-frontend",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "prometheus.io/path": "/metrics",
                  "prometheus.io/port": "9113",
                  "prometheus.io/scrape": "true",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "frontend",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "react",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-frontend",
                "namespace": "atonixcorp-platform",
                "resource_version": "19602",
                "uid": "7a4a4fbf-50a9-4658-bb2a-9feda252390e"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.108.111.66",
                "cluster_ips": [
                  "10.108.111.66"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "http",
                    "node_port": 0,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "80"
                  },
                  {
                    "app_protocol": "",
                    "name": "metrics",
                    "node_port": 0,
                    "port": 9113,
                    "protocol": "TCP",
                    "target_port": "9113"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/component": "frontend",
                  "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                  "app.kubernetes.io/name": "react"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Service",
            "name": "atonixcorp-platform-dev-frontend",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.ingress",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "certificate",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.ingress",
      "mode": "managed",
      "type": "kubernetes_network_policy",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-ingress-netpol",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app.kubernetes.io/component": "ingress",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "nginx",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-ingress-netpol",
                "namespace": "atonixcorp-platform",
                "resource_version": "5138",
                "uid": "11d7cde5-8c22-46dd-ab0b-ed7d29625dab"
              }
            ],
            "spec": [
              {
                "egress": [
                  {
                    "ports": [
                      {
                        "end_port": 0,
                        "port": "8000",
                        "protocol": "TCP"
                      }
                    ],
                    "to": [
                      {
                        "ip_block": [],
                        "namespace_selector": [],
                        "pod_selector": [
                          {
                            "match_expressions": [],
                            "match_labels": {
                              "app.kubernetes.io/component": "backend"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "ports": [
                      {
                        "end_port": 0,
                        "port": "80",
                        "protocol": "TCP"
                      }
                    ],
                    "to": [
                      {
                        "ip_block": [],
                        "namespace_selector": [],
                        "pod_selector": [
                          {
                            "match_expressions": [],
                            "match_labels": {
                              "app.kubernetes.io/component": "frontend"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "ports": [
                      {
                        "end_port": 0,
                        "port": "53",
                        "protocol": "UDP"
                      },
                      {
                        "end_port": 0,
                        "port": "53",
                        "protocol": "TCP"
                      }
                    ],
                    "to": [
                      {
                        "ip_block": [],
                        "namespace_selector": [
                          {
                            "match_expressions": [],
                            "match_labels": {
                              "name": "kube-system"
                            }
                          }
                        ],
                        "pod_selector": []
                      }
                    ]
                  }
                ],
                "ingress": [
                  {
                    "from": [],
                    "ports": [
                      {
                        "end_port": 0,
                        "port": "80",
                        "protocol": "TCP"
                      },
                      {
                        "end_port": 0,
                        "port": "443",
                        "protocol": "TCP"
                      }
                    ]
                  }
                ],
                "pod_selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/name": "nginx"
                    }
                  }
                ],
                "policy_types": [
                  "Ingress",
                  "Egress"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "networking.k8s.io/v1",
            "kind": "NetworkPolicy",
            "name": "atonixcorp-platform-dev-ingress-netpol",
            "namespace": "atonixcorp-platform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.kafka",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "kafka_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "log4j.properties": "log4j.rootLogger=INFO, stdout\n      \nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\n      \nlog4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.kafkaAppender.File=/kafka/logs/server.log\nlog4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n      \nlog4j.logger.kafka=INFO, kafkaAppender\nlog4j.logger.org.apache.kafka=INFO, kafkaAppender\nlog4j.additivity.kafka=false\nlog4j.additivity.org.apache.kafka=false\n",
              "server.properties": "# Kafka Broker Configuration\nbroker.id=1\n      \n# Network Configuration\nlisteners=PLAINTEXT://0.0.0.0:9092\nadvertised.listeners=PLAINTEXT://kafka:9092\nlistener.security.protocol.map=PLAINTEXT:PLAINTEXT\n      \n# Zookeeper Configuration\nzookeeper.connect=atonixcorp-platform-dev-zookeeper:2181\nzookeeper.connection.timeout.ms=6000\n      \n# Topic Configuration\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\n      \n# Log Configuration\nlog.dirs=/kafka/kafka-logs\nnum.partitions=3\nnum.recovery.threads.per.data.dir=1\noffsets.topic.replication.factor=1\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\n      \n# Log Retention\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\n      \n# Group Coordinator Configuration\ngroup.initial.rebalance.delay.ms=0\n      \n# Auto Topic Creation\nauto.create.topics.enable=true\ndelete.topic.enable=true\n      \n# Message Size Configuration\nmessage.max.bytes=1000000\nreplica.fetch.max.bytes=1048576\n      \n# JMX Configuration\njmx.port=9101\n"
            },
            "id": "atonixcorp-platform/kafka-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "kafka",
                  "component": "config"
                },
                "name": "kafka-config",
                "namespace": "atonixcorp-platform",
                "resource_version": "19764",
                "uid": "1626312f-259e-4d82-b9a3-28c05f7019bc"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "ConfigMap",
            "name": "kafka-config",
            "namespace": "atonixcorp-platform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main",
            "module.zookeeper.kubernetes_config_map.jmx_config",
            "module.zookeeper.kubernetes_config_map.zookeeper",
            "module.zookeeper.kubernetes_deployment.zookeeper",
            "module.zookeeper.kubernetes_manifest.zookeeper_servicemonitor",
            "module.zookeeper.kubernetes_persistent_volume_claim.zookeeper_data",
            "module.zookeeper.kubernetes_persistent_volume_claim.zookeeper_logs",
            "module.zookeeper.kubernetes_service.zookeeper"
          ]
        }
      ]
    },
    {
      "module": "module.kafka",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "kafka_service_monitor",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.kafka",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "kafka_external",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.kafka",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "kafka_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/kafka",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "kafka"
                },
                "name": "kafka",
                "namespace": "atonixcorp-platform",
                "resource_version": "19766",
                "uid": "58ade1b3-0a25-4145-b4bd-49ece1086aca"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "None",
                "cluster_ips": [
                  "None"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "kafka",
                    "node_port": 0,
                    "port": 9092,
                    "protocol": "TCP",
                    "target_port": "9092"
                  },
                  {
                    "app_protocol": "",
                    "name": "jmx",
                    "node_port": 0,
                    "port": 9101,
                    "protocol": "TCP",
                    "target_port": "9101"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "kafka"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Service",
            "name": "kafka",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main",
            "module.zookeeper.kubernetes_config_map.jmx_config",
            "module.zookeeper.kubernetes_config_map.zookeeper",
            "module.zookeeper.kubernetes_deployment.zookeeper",
            "module.zookeeper.kubernetes_manifest.zookeeper_servicemonitor",
            "module.zookeeper.kubernetes_persistent_volume_claim.zookeeper_data",
            "module.zookeeper.kubernetes_persistent_volume_claim.zookeeper_logs",
            "module.zookeeper.kubernetes_service.zookeeper"
          ]
        }
      ]
    },
    {
      "module": "module.kafka",
      "mode": "managed",
      "type": "kubernetes_stateful_set",
      "name": "kafka",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/kafka",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "kafka"
                },
                "name": "kafka",
                "namespace": "atonixcorp-platform",
                "resource_version": "",
                "uid": ""
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "persistent_volume_claim_retention_policy": [],
                "pod_management_policy": "",
                "replicas": "1",
                "revision_history_limit": 0,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "kafka"
                    }
                  }
                ],
                "service_name": "kafka",
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {
                          "prometheus.io/path": "/metrics",
                          "prometheus.io/port": "9101",
                          "prometheus.io/scrape": "true"
                        },
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "kafka"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": null,
                            "env": [
                              {
                                "name": "KAFKA_BROKER_ID",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.annotations['kafka.broker.id']"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              },
                              {
                                "name": "KAFKA_ZOOKEEPER_CONNECT",
                                "value": "atonixcorp-platform-dev-zookeeper:2181",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_LISTENERS",
                                "value": "PLAINTEXT://0.0.0.0:9092",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_ADVERTISED_LISTENERS",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "status.podIP"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              },
                              {
                                "name": "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP",
                                "value": "PLAINTEXT:PLAINTEXT",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_TRANSACTION_STATE_LOG_MIN_ISR",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR",
                                "value": "1",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS",
                                "value": "0",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_JMX_PORT",
                                "value": "9101",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_JMX_HOSTNAME",
                                "value": "localhost",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_AUTO_CREATE_TOPICS_ENABLE",
                                "value": "true",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_DELETE_TOPIC_ENABLE",
                                "value": "true",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_LOG_RETENTION_HOURS",
                                "value": "168",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_LOG_SEGMENT_BYTES",
                                "value": "1073741824",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_MESSAGE_MAX_BYTES",
                                "value": "1000000",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_REPLICA_FETCH_MAX_BYTES",
                                "value": "1048576",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "confluentinc/cp-kafka:7.4.0",
                            "image_pull_policy": "",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "sh",
                                      "-c",
                                      "kafka-broker-api-versions --bootstrap-server localhost:9092"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 60,
                                "period_seconds": 30,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 10
                              }
                            ],
                            "name": "kafka",
                            "port": [
                              {
                                "container_port": 9092,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "kafka",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 9101,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "jmx",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "sh",
                                      "-c",
                                      "kafka-topics --bootstrap-server localhost:9092 --list"
                                    ]
                                  }
                                ],
                                "failure_threshold": 5,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 30,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "2000m",
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "cpu": "500m",
                                  "memory": "1Gi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/var/lib/kafka/data",
                                "mount_propagation": "None",
                                "name": "kafka-data",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              },
                              {
                                "mount_path": "/kafka/logs",
                                "mount_propagation": "None",
                                "name": "kafka-logs",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              },
                              {
                                "mount_path": "/etc/kafka",
                                "mount_propagation": "None",
                                "name": "kafka-config",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [
                          {
                            "args": null,
                            "command": [
                              "sh",
                              "-c",
                              "until nc -z atonixcorp-platform-dev-zookeeper 2181; do echo 'Waiting for Zookeeper...'; sleep 2; done; echo 'Zookeeper is ready'"
                            ],
                            "env": [],
                            "env_from": [],
                            "image": "busybox:1.35",
                            "image_pull_policy": "",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "init-kafka",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "kafka-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "kafka-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ],
                "update_strategy": [
                  {
                    "rolling_update": [
                      {
                        "partition": 0
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "volume_claim_template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "kafka"
                        },
                        "name": "kafka-data",
                        "namespace": "default",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "access_modes": [
                          "ReadWriteOnce"
                        ],
                        "resources": [
                          {
                            "limits": null,
                            "requests": {
                              "storage": "3Gi"
                            }
                          }
                        ],
                        "selector": [],
                        "storage_class_name": "standard",
                        "volume_mode": "",
                        "volume_name": ""
                      }
                    ]
                  },
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "kafka"
                        },
                        "name": "kafka-logs",
                        "namespace": "default",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "access_modes": [
                          "ReadWriteOnce"
                        ],
                        "resources": [
                          {
                            "limits": null,
                            "requests": {
                              "storage": "5Gi"
                            }
                          }
                        ],
                        "selector": [],
                        "storage_class_name": "standard",
                        "volume_mode": "",
                        "volume_name": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": null,
            "kind": null,
            "name": null,
            "namespace": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.kafka.kubernetes_config_map.kafka_config",
            "module.kafka.kubernetes_service.kafka_service",
            "module.namespace.kubernetes_namespace.main",
            "module.zookeeper.kubernetes_config_map.jmx_config",
            "module.zookeeper.kubernetes_config_map.zookeeper",
            "module.zookeeper.kubernetes_deployment.zookeeper",
            "module.zookeeper.kubernetes_manifest.zookeeper_servicemonitor",
            "module.zookeeper.kubernetes_persistent_volume_claim.zookeeper_data",
            "module.zookeeper.kubernetes_persistent_volume_claim.zookeeper_logs",
            "module.zookeeper.kubernetes_service.zookeeper"
          ]
        }
      ]
    },
    {
      "module": "module.namespace",
      "mode": "managed",
      "type": "kubernetes_limit_range",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-limits",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "platform",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "atonixcorp-platform",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-limits",
                "namespace": "atonixcorp-platform",
                "resource_version": "5093",
                "uid": "e1ce476e-3eda-46c0-add8-f5ce987f96f3"
              }
            ],
            "spec": [
              {
                "limit": [
                  {
                    "default": {
                      "cpu": "500m",
                      "memory": "1Gi"
                    },
                    "default_request": {
                      "cpu": "100m",
                      "memory": "256Mi"
                    },
                    "max": {
                      "cpu": "2",
                      "memory": "4Gi"
                    },
                    "max_limit_request_ratio": {},
                    "min": {
                      "cpu": "50m",
                      "memory": "128Mi"
                    },
                    "type": "Container"
                  },
                  {
                    "default": {},
                    "default_request": {},
                    "max": {
                      "storage": "50Gi"
                    },
                    "max_limit_request_ratio": {},
                    "min": {
                      "storage": "1Gi"
                    },
                    "type": "PersistentVolumeClaim"
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.namespace",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "platform",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "atonixcorp-platform",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform",
                "resource_version": "19592",
                "uid": "2a692c30-af75-4081-844a-8cc44400c908"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.namespace",
      "mode": "managed",
      "type": "kubernetes_network_policy",
      "name": "allow_internal",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-allow-internal",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app.kubernetes.io/component": "platform",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "atonixcorp-platform",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-allow-internal",
                "namespace": "atonixcorp-platform",
                "resource_version": "5092",
                "uid": "c33c406e-abe1-4980-a28a-14271b8126c2"
              }
            ],
            "spec": [
              {
                "egress": [],
                "ingress": [
                  {
                    "from": [
                      {
                        "ip_block": [],
                        "namespace_selector": [
                          {
                            "match_expressions": [],
                            "match_labels": {
                              "name": "atonixcorp-platform"
                            }
                          }
                        ],
                        "pod_selector": []
                      }
                    ],
                    "ports": []
                  }
                ],
                "pod_selector": [
                  {
                    "match_expressions": [],
                    "match_labels": null
                  }
                ],
                "policy_types": [
                  "Ingress"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "networking.k8s.io/v1",
            "kind": "NetworkPolicy",
            "name": "atonixcorp-platform-allow-internal",
            "namespace": "atonixcorp-platform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.namespace",
      "mode": "managed",
      "type": "kubernetes_network_policy",
      "name": "default_deny",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-default-deny",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app.kubernetes.io/component": "platform",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "atonixcorp-platform",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-default-deny",
                "namespace": "atonixcorp-platform",
                "resource_version": "5107",
                "uid": "5ce35a96-9878-48d7-bf21-099ec076b929"
              }
            ],
            "spec": [
              {
                "egress": [
                  {
                    "ports": [
                      {
                        "end_port": 0,
                        "port": "53",
                        "protocol": "UDP"
                      },
                      {
                        "end_port": 0,
                        "port": "53",
                        "protocol": "TCP"
                      }
                    ],
                    "to": [
                      {
                        "ip_block": [],
                        "namespace_selector": [
                          {
                            "match_expressions": [],
                            "match_labels": {
                              "name": "kube-system"
                            }
                          }
                        ],
                        "pod_selector": []
                      }
                    ]
                  },
                  {
                    "ports": [
                      {
                        "end_port": 0,
                        "port": "80",
                        "protocol": "TCP"
                      },
                      {
                        "end_port": 0,
                        "port": "443",
                        "protocol": "TCP"
                      }
                    ],
                    "to": []
                  }
                ],
                "ingress": [],
                "pod_selector": [
                  {
                    "match_expressions": [],
                    "match_labels": null
                  }
                ],
                "policy_types": [
                  "Ingress",
                  "Egress"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "networking.k8s.io/v1",
            "kind": "NetworkPolicy",
            "name": "atonixcorp-platform-default-deny",
            "namespace": "atonixcorp-platform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.namespace",
      "mode": "managed",
      "type": "kubernetes_resource_quota",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-quota",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "platform",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "atonixcorp-platform",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-quota",
                "namespace": "atonixcorp-platform",
                "resource_version": "19369",
                "uid": "abeed9ad-f930-4833-883f-e8740034ea5d"
              }
            ],
            "spec": [
              {
                "hard": {
                  "count/configmaps": "50",
                  "count/cronjobs.batch": "10",
                  "count/deployments.apps": "20",
                  "count/ingresses.networking.k8s.io": "10",
                  "count/jobs.batch": "20",
                  "count/replicasets.apps": "20",
                  "count/statefulsets.apps": "10",
                  "limits.cpu": "20",
                  "limits.memory": "40Gi",
                  "persistentvolumeclaims": "10",
                  "pods": "50",
                  "replicationcontrollers": "20",
                  "requests.cpu": "10",
                  "requests.memory": "20Gi",
                  "requests.storage": "100Gi",
                  "resourcequotas": "1",
                  "secrets": "50",
                  "services": "20",
                  "services.loadbalancers": "5",
                  "services.nodeports": "10"
                },
                "scope_selector": [],
                "scopes": []
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.postgresql",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "postgresql",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "pg_hba.conf": "# PostgreSQL Client Authentication Configuration File\nlocal   all             all                                     trust\nhost    all             all             127.0.0.1/32            md5\nhost    all             all             ::1/128                 md5\nhost    all             all             0.0.0.0/0               md5\n",
              "postgresql.conf": "# PostgreSQL Configuration\nlisten_addresses = '*'\nport = 5432\nmax_connections = 100\nshared_buffers = 256MB\neffective_cache_size = 1GB\nmaintenance_work_mem = 64MB\ncheckpoint_completion_target = 0.7\nwal_buffers = 16MB\ndefault_statistics_target = 100\nrandom_page_cost = 1.1\neffective_io_concurrency = 200\nwork_mem = 4MB\nmin_wal_size = 1GB\nmax_wal_size = 4GB\n      \n# Logging\nlog_destination = 'stderr'\nlogging_collector = on\nlog_directory = 'log'\nlog_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 100MB\nlog_min_duration_statement = 1000\nlog_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '\nlog_statement = 'none'\n      \n# Monitoring\ntrack_activities = on\ntrack_counts = on\ntrack_io_timing = on\ntrack_functions = pl\nstats_temp_directory = 'pg_stat_tmp'\n"
            },
            "id": "atonixcorp-platform/atonixcorp-platform-dev-postgresql-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "database",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "postgresql",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-postgresql-config",
                "namespace": "atonixcorp-platform",
                "resource_version": "19603",
                "uid": "4b9aa24a-2b3f-48ff-ac5d-5c8b476a4098"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "ConfigMap",
            "name": "atonixcorp-platform-dev-postgresql-config",
            "namespace": "atonixcorp-platform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.postgresql",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "postgresql",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-postgresql",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 5,
                "labels": {
                  "app.kubernetes.io/component": "database",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "postgresql",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-postgresql",
                "namespace": "atonixcorp-platform",
                "resource_version": "19083",
                "uid": "83e6fcf0-b8dd-48ea-bb80-33cff29be18e"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/component": "database",
                      "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                      "app.kubernetes.io/name": "postgresql"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [],
                    "type": "Recreate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {
                          "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                          "atonixcorp.com/deployed-by": "terraform",
                          "atonixcorp.com/environment": "dev",
                          "atonixcorp.com/version": "1.0.0",
                          "prometheus.io/port": "9187",
                          "prometheus.io/scrape": "true",
                          "terraform.io/managed": "true"
                        },
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app.kubernetes.io/component": "database",
                          "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                          "app.kubernetes.io/managed-by": "terraform",
                          "app.kubernetes.io/name": "postgresql",
                          "app.kubernetes.io/part-of": "atonixcorp-platform",
                          "app.kubernetes.io/version": "1.0.0",
                          "environment": "dev",
                          "project": "atonixcorp-platform"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "PGDATA",
                                "value": "/var/lib/postgresql/data/pgdata",
                                "value_from": []
                              }
                            ],
                            "env_from": [
                              {
                                "config_map_ref": [],
                                "prefix": "",
                                "secret_ref": [
                                  {
                                    "name": "atonixcorp-platform-dev-postgresql",
                                    "optional": false
                                  }
                                ]
                              }
                            ],
                            "image": "postgres:15-alpine",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "/bin/sh",
                                      "-c",
                                      "pg_isready -U atonixcorp -d atonixcorp"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 30,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "name": "postgresql",
                            "port": [
                              {
                                "container_port": 5432,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "postgresql",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "/bin/sh",
                                      "-c",
                                      "pg_isready -U atonixcorp -d atonixcorp"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 5,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 3
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "1",
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": "250m",
                                  "memory": "512Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "/bin/sh",
                                      "-c",
                                      "pg_isready -U atonixcorp -d atonixcorp"
                                    ]
                                  }
                                ],
                                "failure_threshold": 30,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 10,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 3
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/var/lib/postgresql/data",
                                "mount_propagation": "None",
                                "name": "postgresql-data",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              },
                              {
                                "mount_path": "/etc/postgresql",
                                "mount_propagation": "None",
                                "name": "postgresql-config",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              }
                            ],
                            "working_dir": ""
                          },
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "DATA_SOURCE_NAME",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [],
                                    "resource_field_ref": [],
                                    "secret_key_ref": [
                                      {
                                        "key": "DATABASE_URL",
                                        "name": "atonixcorp-platform-dev-postgresql",
                                        "optional": false
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "env_from": [],
                            "image": "prometheuscommunity/postgres-exporter:v0.11.1",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/metrics",
                                    "port": "9187",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 30,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "name": "postgres-exporter",
                            "port": [
                              {
                                "container_port": 9187,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "metrics",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "200m",
                                  "memory": "256Mi"
                                },
                                "requests": {
                                  "cpu": "50m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [
                          {
                            "fs_group": "999",
                            "fs_group_change_policy": "",
                            "run_as_group": "999",
                            "run_as_non_root": true,
                            "run_as_user": "999",
                            "se_linux_options": [],
                            "seccomp_profile": [],
                            "supplemental_groups": [],
                            "sysctl": [],
                            "windows_options": []
                          }
                        ],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "postgresql-data",
                            "nfs": [],
                            "persistent_volume_claim": [
                              {
                                "claim_name": "atonixcorp-platform-dev-postgresql-data",
                                "read_only": false
                              }
                            ],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "atonixcorp-platform-dev-postgresql-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "postgresql-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "apps/v1",
            "kind": "Deployment",
            "name": "atonixcorp-platform-dev-postgresql",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main",
            "module.postgresql.kubernetes_config_map.postgresql",
            "module.postgresql.kubernetes_persistent_volume_claim.postgresql",
            "module.postgresql.kubernetes_secret.postgresql",
            "module.postgresql.random_password.postgres_password"
          ]
        }
      ]
    },
    {
      "module": "module.postgresql",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "postgresql_servicemonitor",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.postgresql",
      "mode": "managed",
      "type": "kubernetes_persistent_volume_claim",
      "name": "postgresql",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-postgresql-data",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "database",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "postgresql",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-postgresql-data",
                "namespace": "atonixcorp-platform",
                "resource_version": "19604",
                "uid": "d9979038-6ebd-49c8-b975-856c6d160a37"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteOnce"
                ],
                "resources": [
                  {
                    "limits": {},
                    "requests": {
                      "storage": "5Gi"
                    }
                  }
                ],
                "selector": [],
                "storage_class_name": "standard",
                "volume_mode": "Filesystem",
                "volume_name": "local-pv-1"
              }
            ],
            "timeouts": null,
            "wait_until_bound": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.postgresql",
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "postgresql",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "binary_data_wo": null,
            "binary_data_wo_revision": null,
            "data": {
              "DATABASE_URL": "postgresql://atonixcorp:]JC_J_yfRvu1fGFixZb+d\u0026FxXZFRXyl+@atonixcorp-platform-dev-postgresql:5432/atonixcorp",
              "POSTGRES_DB": "atonixcorp",
              "POSTGRES_PASSWORD": "]JC_J_yfRvu1fGFixZb+d\u0026FxXZFRXyl+",
              "POSTGRES_USER": "atonixcorp"
            },
            "data_wo": null,
            "data_wo_revision": null,
            "id": "atonixcorp-platform/atonixcorp-platform-dev-postgresql",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "database",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "postgresql",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-postgresql",
                "namespace": "atonixcorp-platform",
                "resource_version": "19597",
                "uid": "f11e53ff-8417-4fd6-ba85-5e9ccac95553"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "DATABASE_URL",
                  "type": "string"
                }
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "POSTGRES_PASSWORD",
                  "type": "string"
                }
              }
            ]
          ],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Secret",
            "name": "atonixcorp-platform-dev-postgresql",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main",
            "module.postgresql.random_password.postgres_password"
          ]
        }
      ]
    },
    {
      "module": "module.postgresql",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "postgresql",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-postgresql",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "prometheus.io/path": "/metrics",
                  "prometheus.io/port": "9187",
                  "prometheus.io/scrape": "true",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "database",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "postgresql",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-postgresql",
                "namespace": "atonixcorp-platform",
                "resource_version": "19605",
                "uid": "b9f77694-1f9a-47be-a040-3379f3530ccb"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.107.29.198",
                "cluster_ips": [
                  "10.107.29.198"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "postgresql",
                    "node_port": 0,
                    "port": 5432,
                    "protocol": "TCP",
                    "target_port": "5432"
                  },
                  {
                    "app_protocol": "",
                    "name": "metrics",
                    "node_port": 0,
                    "port": 9187,
                    "protocol": "TCP",
                    "target_port": "9187"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/component": "database",
                  "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                  "app.kubernetes.io/name": "postgresql"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Service",
            "name": "atonixcorp-platform-dev-postgresql",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.postgresql",
      "mode": "managed",
      "type": "random_password",
      "name": "postgres_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$6Z2xjHL3kAjTBgH0brKP2uExY/lLhLycrG1w5X11uIcJ12.LI8aEC",
            "id": "none",
            "keepers": null,
            "length": 32,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "]JC_J_yfRvu1fGFixZb+d\u0026FxXZFRXyl+",
            "special": true,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ]
          ],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.redis",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "redis",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "redis.conf": "# Redis Configuration\nbind 0.0.0.0\nport 6379\n      \n# Memory management\nmaxmemory 512mb\nmaxmemory-policy allkeys-lru\n      \n# Persistence\nsave 900 1\nsave 300 10\nsave 60 10000\n      \n# Logging\nloglevel notice\nlogfile \"\"\n      \n# Client timeout\ntimeout 300\ntcp-keepalive 300\n      \n# Database settings\ndatabases 16\n      \n# Security\nprotected-mode no\n      \n# Performance\ntcp-backlog 511\n      \n# Append only file\nappendonly yes\nappendfsync everysec\nno-appendfsync-on-rewrite no\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n      \n# Slow log\nslowlog-log-slower-than 10000\nslowlog-max-len 128\n      \n# Latency monitoring\nlatency-monitor-threshold 100\n      \n# Client output buffer limits\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit replica 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n"
            },
            "id": "atonixcorp-platform/atonixcorp-platform-dev-redis-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "cache",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "redis",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-redis-config",
                "namespace": "atonixcorp-platform",
                "resource_version": "19593",
                "uid": "2c9b349d-69e8-441b-a56b-c04dfff3bcf9"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "ConfigMap",
            "name": "atonixcorp-platform-dev-redis-config",
            "namespace": "atonixcorp-platform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.redis",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "redis",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-redis",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 5,
                "labels": {
                  "app.kubernetes.io/component": "cache",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "redis",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-redis",
                "namespace": "atonixcorp-platform",
                "resource_version": "19111",
                "uid": "b5921e79-d26f-41c7-8084-f977bdba3f09"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/component": "cache",
                      "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                      "app.kubernetes.io/name": "redis"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [],
                    "type": "Recreate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {
                          "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                          "atonixcorp.com/deployed-by": "terraform",
                          "atonixcorp.com/environment": "dev",
                          "atonixcorp.com/version": "1.0.0",
                          "prometheus.io/port": "9121",
                          "prometheus.io/scrape": "true",
                          "terraform.io/managed": "true"
                        },
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app.kubernetes.io/component": "cache",
                          "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                          "app.kubernetes.io/managed-by": "terraform",
                          "app.kubernetes.io/name": "redis",
                          "app.kubernetes.io/part-of": "atonixcorp-platform",
                          "app.kubernetes.io/version": "1.0.0",
                          "environment": "dev",
                          "project": "atonixcorp-platform"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [
                              "redis-server",
                              "/etc/redis/redis.conf"
                            ],
                            "env": [],
                            "env_from": [],
                            "image": "redis:7-alpine",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "redis-cli",
                                      "ping"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 30,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "name": "redis",
                            "port": [
                              {
                                "container_port": 6379,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "redis",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "redis-cli",
                                      "ping"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 5,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 3
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "500m",
                                  "memory": "1Gi"
                                },
                                "requests": {
                                  "cpu": "100m",
                                  "memory": "256Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "redis-cli",
                                      "ping"
                                    ]
                                  }
                                ],
                                "failure_threshold": 30,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 10,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 3
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/etc/redis",
                                "mount_propagation": "None",
                                "name": "redis-config",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              },
                              {
                                "mount_path": "/data",
                                "mount_propagation": "None",
                                "name": "redis-data",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              }
                            ],
                            "working_dir": ""
                          },
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "REDIS_ADDR",
                                "value": "redis://localhost:6379",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "oliver006/redis_exporter:v1.45.0",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/metrics",
                                    "port": "9121",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 30,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "name": "redis-exporter",
                            "port": [
                              {
                                "container_port": 9121,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "metrics",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "200m",
                                  "memory": "256Mi"
                                },
                                "requests": {
                                  "cpu": "50m",
                                  "memory": "64Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [
                          {
                            "fs_group": "999",
                            "fs_group_change_policy": "",
                            "run_as_group": "999",
                            "run_as_non_root": true,
                            "run_as_user": "999",
                            "se_linux_options": [],
                            "seccomp_profile": [],
                            "supplemental_groups": [],
                            "sysctl": [],
                            "windows_options": []
                          }
                        ],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "atonixcorp-platform-dev-redis-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "redis-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "redis-data",
                            "nfs": [],
                            "persistent_volume_claim": [
                              {
                                "claim_name": "atonixcorp-platform-dev-redis-data",
                                "read_only": false
                              }
                            ],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "apps/v1",
            "kind": "Deployment",
            "name": "atonixcorp-platform-dev-redis",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main",
            "module.redis.kubernetes_config_map.redis",
            "module.redis.kubernetes_persistent_volume_claim.redis"
          ]
        }
      ]
    },
    {
      "module": "module.redis",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "redis_servicemonitor",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.redis",
      "mode": "managed",
      "type": "kubernetes_persistent_volume_claim",
      "name": "redis",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-redis-data",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "cache",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "redis",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-redis-data",
                "namespace": "atonixcorp-platform",
                "resource_version": "19596",
                "uid": "5a8dd529-67d7-4b99-8a89-a8c67d3db047"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteOnce"
                ],
                "resources": [
                  {
                    "limits": {},
                    "requests": {
                      "storage": "2Gi"
                    }
                  }
                ],
                "selector": [],
                "storage_class_name": "standard",
                "volume_mode": "Filesystem",
                "volume_name": "local-pv-3"
              }
            ],
            "timeouts": null,
            "wait_until_bound": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.redis",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "redis",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-redis",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "prometheus.io/path": "/metrics",
                  "prometheus.io/port": "9121",
                  "prometheus.io/scrape": "true",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "cache",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "redis",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-redis",
                "namespace": "atonixcorp-platform",
                "resource_version": "19598",
                "uid": "a156e256-3ba9-495e-b865-95805a74038d"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.110.184.227",
                "cluster_ips": [
                  "10.110.184.227"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "redis",
                    "node_port": 0,
                    "port": 6379,
                    "protocol": "TCP",
                    "target_port": "6379"
                  },
                  {
                    "app_protocol": "",
                    "name": "metrics",
                    "node_port": 0,
                    "port": 9121,
                    "protocol": "TCP",
                    "target_port": "9121"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/component": "cache",
                  "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                  "app.kubernetes.io/name": "redis"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Service",
            "name": "atonixcorp-platform-dev-redis",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.zookeeper",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "jmx_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.zookeeper",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "zookeeper",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "KAFKA_JMX_HOSTNAME": "localhost",
              "KAFKA_JMX_OPTS": "",
              "KAFKA_JMX_PORT": "",
              "ZOOKEEPER_4LW_COMMANDS_WHITELIST": "mntr,conf,ruok,stat,srvr,cons,dump,envi,reqs,wchs,wchc,wchp",
              "ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL": "24",
              "ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT": "3",
              "ZOOKEEPER_CLIENT_PORT": "2181",
              "ZOOKEEPER_DATA_DIR": "/var/lib/zookeeper/data",
              "ZOOKEEPER_INIT_LIMIT": "5",
              "ZOOKEEPER_LOG4J_PROP": "INFO,CONSOLE,ROLLINGFILE",
              "ZOOKEEPER_LOG4J_ROOT_LOGLEVEL": "INFO",
              "ZOOKEEPER_LOG_DIR": "/var/lib/zookeeper/log",
              "ZOOKEEPER_MAX_CLIENT_CNXNS": "60",
              "ZOOKEEPER_SYNC_LIMIT": "2",
              "ZOOKEEPER_TICK_TIME": "2000",
              "log4j.properties": "# Root logger\nlog4j.rootLogger=INFO, CONSOLE, ROLLINGFILE\n      \n# Console appender\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n\n      \n# Rolling file appender\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.File=/var/lib/zookeeper/log/zookeeper.log\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\nlog4j.appender.ROLLINGFILE.MaxBackupIndex=10\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n\n      \n# Suppress noisy classes\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxnFactory=WARN\nlog4j.logger.org.apache.zookeeper.server.NettyServerCnxnFactory=WARN\nlog4j.logger.org.apache.zookeeper.ClientCnxn=WARN\n",
              "zoo.cfg": "# Basic time unit in milliseconds used by ZooKeeper\ntickTime=2000\n      \n# The number of ticks that the initial synchronization phase can take\ninitLimit=5\n      \n# The number of ticks that can pass between sending a request and getting an acknowledgement\nsyncLimit=2\n      \n# Data directory\ndataDir=/var/lib/zookeeper/data\n      \n# Log directory\ndataLogDir=/var/lib/zookeeper/log\n      \n# Port at which the clients will connect\nclientPort=2181\n      \n# Maximum number of client connections\nmaxClientCnxns=60\n      \n# Autopurge settings\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=24\n      \n# Admin server configuration\nadmin.enableServer=true\nadmin.serverPort=8080\n      \n# 4lw commands whitelist\n4lw.commands.whitelist=mntr,conf,ruok,stat,srvr,cons,dump,envi,reqs,wchs,wchc,wchp\n      \n# Performance tuning\npreAllocSize=65536\nsnapCount=100000\nmaxSessionTimeout=40000\nminSessionTimeout=4000\n      \n# Security (if needed)\n# authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider\n# requireClientAuthScheme=sasl\n"
            },
            "id": "atonixcorp-platform/atonixcorp-platform-dev-zookeeper-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "coordination",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "zookeeper",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-zookeeper-config",
                "namespace": "atonixcorp-platform",
                "resource_version": "19599",
                "uid": "94bd077d-c3f7-4f3a-8f33-42953de594ba"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "ConfigMap",
            "name": "atonixcorp-platform-dev-zookeeper-config",
            "namespace": "atonixcorp-platform"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.zookeeper",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "zookeeper",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-zookeeper",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 8,
                "labels": {
                  "app.kubernetes.io/component": "coordination",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "zookeeper",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-zookeeper",
                "namespace": "atonixcorp-platform",
                "resource_version": "19742",
                "uid": "9ef9770b-4e93-46b1-88e7-877028ded7d2"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/component": "coordination",
                      "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                      "app.kubernetes.io/name": "zookeeper"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [],
                    "type": "Recreate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {
                          "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                          "atonixcorp.com/deployed-by": "terraform",
                          "atonixcorp.com/environment": "dev",
                          "atonixcorp.com/version": "1.0.0",
                          "prometheus.io/port": "",
                          "prometheus.io/scrape": "false",
                          "terraform.io/managed": "true"
                        },
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app.kubernetes.io/component": "coordination",
                          "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                          "app.kubernetes.io/managed-by": "terraform",
                          "app.kubernetes.io/name": "zookeeper",
                          "app.kubernetes.io/part-of": "atonixcorp-platform",
                          "app.kubernetes.io/version": "1.0.0",
                          "environment": "dev",
                          "project": "atonixcorp-platform"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [
                              {
                                "name": "POD_NAME",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              },
                              {
                                "name": "POD_NAMESPACE",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              },
                              {
                                "name": "ZOOKEEPER_SERVER_ID",
                                "value": "1",
                                "value_from": []
                              }
                            ],
                            "env_from": [
                              {
                                "config_map_ref": [
                                  {
                                    "name": "atonixcorp-platform-dev-zookeeper-config",
                                    "optional": false
                                  }
                                ],
                                "prefix": "",
                                "secret_ref": []
                              }
                            ],
                            "image": "confluentinc/cp-zookeeper:7.4.0",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "sh",
                                      "-c",
                                      "echo srvr | nc localhost 2181 | grep -q Zookeeper"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 30,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "name": "zookeeper",
                            "port": [
                              {
                                "container_port": 2181,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "client",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 2888,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "peer",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 3888,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "leader-election",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "admin",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "sh",
                                      "-c",
                                      "echo srvr | nc localhost 2181 | grep -q Zookeeper"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 10,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 3
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "1",
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": "250m",
                                  "memory": "512Mi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "sh",
                                      "-c",
                                      "echo srvr | nc localhost 2181 | grep -q Zookeeper"
                                    ]
                                  }
                                ],
                                "failure_threshold": 30,
                                "grpc": [],
                                "http_get": [],
                                "initial_delay_seconds": 15,
                                "period_seconds": 5,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 3
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_device": [],
                            "volume_mount": [
                              {
                                "mount_path": "/var/lib/zookeeper/data",
                                "mount_propagation": "None",
                                "name": "zookeeper-data",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              },
                              {
                                "mount_path": "/var/lib/zookeeper/log",
                                "mount_propagation": "None",
                                "name": "zookeeper-logs",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              },
                              {
                                "mount_path": "/etc/zookeeper",
                                "mount_propagation": "None",
                                "name": "zookeeper-config",
                                "read_only": false,
                                "sub_path": "",
                                "sub_path_expr": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [
                          {
                            "fs_group": "1000",
                            "fs_group_change_policy": "",
                            "run_as_group": "1000",
                            "run_as_non_root": true,
                            "run_as_user": "1000",
                            "se_linux_options": [],
                            "seccomp_profile": [],
                            "supplemental_groups": [],
                            "sysctl": [],
                            "windows_options": []
                          }
                        ],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "zookeeper-data",
                            "nfs": [],
                            "persistent_volume_claim": [
                              {
                                "claim_name": "atonixcorp-platform-dev-zookeeper-data",
                                "read_only": false
                              }
                            ],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "zookeeper-logs",
                            "nfs": [],
                            "persistent_volume_claim": [
                              {
                                "claim_name": "atonixcorp-platform-dev-zookeeper-logs",
                                "read_only": false
                              }
                            ],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "atonixcorp-platform-dev-zookeeper-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "zookeeper-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "apps/v1",
            "kind": "Deployment",
            "name": "atonixcorp-platform-dev-zookeeper",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main",
            "module.zookeeper.kubernetes_config_map.jmx_config",
            "module.zookeeper.kubernetes_config_map.zookeeper",
            "module.zookeeper.kubernetes_persistent_volume_claim.zookeeper_data",
            "module.zookeeper.kubernetes_persistent_volume_claim.zookeeper_logs"
          ]
        }
      ]
    },
    {
      "module": "module.zookeeper",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "zookeeper_servicemonitor",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.zookeeper",
      "mode": "managed",
      "type": "kubernetes_persistent_volume_claim",
      "name": "zookeeper_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-zookeeper-data",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "coordination",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "zookeeper",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-zookeeper-data",
                "namespace": "atonixcorp-platform",
                "resource_version": "19594",
                "uid": "ba022ae4-9338-41a3-9d35-9163f8806160"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteOnce"
                ],
                "resources": [
                  {
                    "limits": {},
                    "requests": {
                      "storage": "2Gi"
                    }
                  }
                ],
                "selector": [],
                "storage_class_name": "standard",
                "volume_mode": "Filesystem",
                "volume_name": "local-pv-4"
              }
            ],
            "timeouts": null,
            "wait_until_bound": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.zookeeper",
      "mode": "managed",
      "type": "kubernetes_persistent_volume_claim",
      "name": "zookeeper_logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-zookeeper-logs",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "coordination",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "zookeeper",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-zookeeper-logs",
                "namespace": "atonixcorp-platform",
                "resource_version": "19600",
                "uid": "894d303c-8ed2-4c62-a96d-4a93e67e5258"
              }
            ],
            "spec": [
              {
                "access_modes": [
                  "ReadWriteOnce"
                ],
                "resources": [
                  {
                    "limits": {},
                    "requests": {
                      "storage": "5Gi"
                    }
                  }
                ],
                "selector": [],
                "storage_class_name": "standard",
                "volume_mode": "Filesystem",
                "volume_name": "local-pv-5"
              }
            ],
            "timeouts": null,
            "wait_until_bound": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    },
    {
      "module": "module.zookeeper",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "zookeeper",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "atonixcorp-platform/atonixcorp-platform-dev-zookeeper",
            "metadata": [
              {
                "annotations": {
                  "atonixcorp.com/deployed-at": "2025-09-21T10:06:56Z",
                  "atonixcorp.com/deployed-by": "terraform",
                  "atonixcorp.com/environment": "dev",
                  "atonixcorp.com/version": "1.0.0",
                  "prometheus.io/path": "/metrics",
                  "prometheus.io/port": "",
                  "prometheus.io/scrape": "false",
                  "terraform.io/managed": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "coordination",
                  "app.kubernetes.io/instance": "dev",
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "zookeeper",
                  "app.kubernetes.io/part-of": "atonixcorp-platform",
                  "app.kubernetes.io/version": "1.0.0",
                  "environment": "dev",
                  "project": "atonixcorp-platform"
                },
                "name": "atonixcorp-platform-dev-zookeeper",
                "namespace": "atonixcorp-platform",
                "resource_version": "19601",
                "uid": "5008dbb0-88e0-4f27-8681-a3f3f9e37b02"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.102.59.225",
                "cluster_ips": [
                  "10.102.59.225"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "client",
                    "node_port": 0,
                    "port": 2181,
                    "protocol": "TCP",
                    "target_port": "2181"
                  },
                  {
                    "app_protocol": "",
                    "name": "peer",
                    "node_port": 0,
                    "port": 2888,
                    "protocol": "TCP",
                    "target_port": "2888"
                  },
                  {
                    "app_protocol": "",
                    "name": "leader-election",
                    "node_port": 0,
                    "port": 3888,
                    "protocol": "TCP",
                    "target_port": "3888"
                  },
                  {
                    "app_protocol": "",
                    "name": "admin",
                    "node_port": 0,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/component": "coordination",
                  "app.kubernetes.io/instance": "atonixcorp-platform-dev",
                  "app.kubernetes.io/name": "zookeeper"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Service",
            "name": "atonixcorp-platform-dev-zookeeper",
            "namespace": "atonixcorp-platform"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.namespace.kubernetes_namespace.main"
          ]
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "var.environment",
      "status": "pass",
      "objects": [
        {
          "object_addr": "var.environment",
          "status": "pass"
        }
      ]
    }
  ]
}
