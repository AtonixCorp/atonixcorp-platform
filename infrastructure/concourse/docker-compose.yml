version: '3.8'

services:
  # Concourse Database
  concourse-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: concourse
      POSTGRES_USER: concourse
      POSTGRES_PASSWORD: concourse_pass
      PGDATA: /database
    volumes:
      - concourse_db_data:/database
    networks:
      - concourse
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U concourse"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Concourse Web (ATC + TSA)
  concourse-web:
    image: concourse/concourse:7.11.2
    command: web
    depends_on:
      concourse-db:
        condition: service_healthy
    ports:
      - "8080:8080"    # Web UI
      - "2222:2222"    # TSA (worker registration)
    volumes:
      - ./config/keys:/concourse-keys
      - ./config/web:/concourse-config
    environment:
      # Database Configuration
      CONCOURSE_POSTGRES_HOST: concourse-db
      CONCOURSE_POSTGRES_PORT: 5432
      CONCOURSE_POSTGRES_DATABASE: concourse
      CONCOURSE_POSTGRES_USER: concourse
      CONCOURSE_POSTGRES_PASSWORD: concourse_pass

      # External URL
      CONCOURSE_EXTERNAL_URL: http://localhost:8080
      
      # Authentication
      CONCOURSE_ADD_LOCAL_USER: admin:atonix2024!
      CONCOURSE_MAIN_TEAM_LOCAL_USER: admin
      
      # Session signing key
      CONCOURSE_SESSION_SIGNING_KEY: /concourse-keys/session_signing_key
      
      # TSA host key
      CONCOURSE_TSA_HOST_KEY: /concourse-keys/tsa_host_key
      CONCOURSE_TSA_AUTHORIZED_KEYS: /concourse-keys/authorized_worker_keys
      
      # Worker key
      CONCOURSE_WORKER_KEY: /concourse-keys/worker_key
      
      # Security settings
      CONCOURSE_SECRET_RETRY_ATTEMPTS: 5
      CONCOURSE_SECRET_RETRY_INTERVAL: 1s
      
      # Build logs retention
      CONCOURSE_BUILD_LOGS_TO_RETAIN: 100
      
      # Container placement strategy
      CONCOURSE_CONTAINER_PLACEMENT_STRATEGY: volume-locality
      
      # Metrics
      CONCOURSE_PROMETHEUS_BIND_IP: 0.0.0.0
      CONCOURSE_PROMETHEUS_BIND_PORT: 9391
      
      # Tracing (OpenTelemetry integration)
      CONCOURSE_TRACING_JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      CONCOURSE_TRACING_SERVICE_NAME: concourse-web
      
      # Logging
      CONCOURSE_LOG_LEVEL: info
      
      # GC settings
      CONCOURSE_GC_INTERVAL: 30s
      CONCOURSE_GC_ONE_OFF_GRACE_PERIOD: 5m
      
    networks:
      - concourse
      - observability  # Connect to observability stack
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/info"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.concourse.rule=Host(`concourse.atonixcorp.local`)"
      - "traefik.http.services.concourse.loadbalancer.server.port=8080"

  # Concourse Worker
  concourse-worker:
    image: concourse/concourse:7.11.2
    command: worker
    privileged: true
    depends_on:
      concourse-web:
        condition: service_healthy
    volumes:
      - ./config/keys:/concourse-keys
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # TSA connection
      CONCOURSE_TSA_HOST: concourse-web:2222
      
      # Worker key
      CONCOURSE_TSA_PUBLIC_KEY: /concourse-keys/tsa_host_key.pub
      CONCOURSE_TSA_WORKER_PRIVATE_KEY: /concourse-keys/worker_key
      
      # Runtime
      CONCOURSE_RUNTIME: containerd
      
      # Worker configuration
      CONCOURSE_WORK_DIR: /opt/concourse/worker
      CONCOURSE_BIND_IP: 0.0.0.0
      CONCOURSE_BIND_PORT: 7777
      CONCOURSE_LOG_LEVEL: info
      
      # Container configuration
      CONCOURSE_GARDEN_BIND_IP: 0.0.0.0
      CONCOURSE_GARDEN_BIND_PORT: 7777
      CONCOURSE_GARDEN_DNS_SERVER: 8.8.8.8
      
      # Resource limits
      CONCOURSE_GARDEN_MAX_CONTAINERS: 250
      CONCOURSE_BAGGAGECLAIM_BIND_IP: 0.0.0.0
      CONCOURSE_BAGGAGECLAIM_BIND_PORT: 7788
      
      # Cleanup
      CONCOURSE_SWEEP_INTERVAL: 30s
      CONCOURSE_VOLUME_SWEEPER_MAX_IN_FLIGHT: 5
      
      # Tracing
      CONCOURSE_TRACING_JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      CONCOURSE_TRACING_SERVICE_NAME: concourse-worker
      
    networks:
      - concourse
      - observability
    restart: unless-stopped

  # Concourse Fly CLI Container (for management)
  concourse-fly:
    image: concourse/concourse:7.11.2
    command: sleep infinity
    volumes:
      - ./pipelines:/pipelines
      - ./tasks:/tasks
      - ./scripts:/scripts
    networks:
      - concourse
    profiles:
      - management

  # Vault for secrets management (optional)
  vault:
    image: hashicorp/vault:1.15
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: atonix-root-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    networks:
      - concourse
    restart: unless-stopped
    profiles:
      - vault

  # MinIO for artifact storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: atonixadmin
      MINIO_ROOT_PASSWORD: atonix2024!
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - concourse
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.atonixcorp.local`)"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"

  # Redis for caching (shared with platform)
  redis-concourse:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_concourse_data:/data
    networks:
      - concourse
    restart: unless-stopped

volumes:
  concourse_db_data:
  minio_data:
  redis_concourse_data:

networks:
  concourse:
    driver: bridge
  observability:
    external: true  # Connect to existing observability network