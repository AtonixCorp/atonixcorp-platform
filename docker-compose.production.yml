# Production Environment Configuration
# Use this file with docker-compose for production deployment

version: '3.8'

services:
  app:
    image: quay.io/atonixdev/atonixcorp-platform:latest
    ports:
      - "80:80"
      - "443:443"
    environment:
      # Django settings
      - ENVIRONMENT=production
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=atonixcorp.org,www.atonixcorp.org,api.atonixcorp.org
      
      # Database settings
      - DATABASE_URL=${DATABASE_URL}
      
      # Security settings
      - USE_HTTPS=True
      - SECURE_SSL_REDIRECT=True
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - API_KEY_SALT=${API_KEY_SALT}
      - AES_PASSWORD=${AES_PASSWORD}
      - AES_SALT=${AES_SALT}
      
      # CORS settings
      - CORS_ALLOWED_ORIGINS=https://atonixcorp.org,https://www.atonixcorp.org
      
      # Cache and session settings
      - REDIS_URL=${REDIS_URL}
      
      # Email settings
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=noreply@atonixcorp.org
      
      # Monitoring and observability
      - OTEL_ENABLED=True
      - OTEL_SERVICE_NAME=atonixcorp-platform-prod
      - OTEL_SERVICE_VERSION=1.0.0
      - JAEGER_ENDPOINT=${JAEGER_ENDPOINT}
      - PROMETHEUS_METRICS_PORT=8001
      
      # External services (optional)
      - KAFKA_ENABLED=${KAFKA_ENABLED:-false}
      - ZOOKEEPER_ENABLED=${ZOOKEEPER_ENABLED:-false}
      
    volumes:
      # SSL certificates
      - ./ssl/atonixcorp.org.crt:/etc/ssl/certs/atonixcorp.org.crt:ro
      - ./ssl/atonixcorp.org.key:/etc/ssl/private/atonixcorp.org.key:ro
      - ./ssl/api.atonixcorp.org.crt:/etc/ssl/certs/api.atonixcorp.org.crt:ro
      - ./ssl/api.atonixcorp.org.key:/etc/ssl/private/api.atonixcorp.org.key:ro
      - ./ssl/default.crt:/etc/ssl/certs/default.crt:ro
      - ./ssl/default.key:/etc/ssl/private/default.key:ro
      
      # Persistent data
      - app_media:/app/media
      - app_logs:/app/logs
      
      # Production nginx config
      - ./docker/nginx-production.conf:/etc/nginx/sites-available/default:ro
      
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "https://api.atonixcorp.org/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    networks:
      - atonix-network

  # Optional: Separate database service
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - atonix-network

  # Optional: Redis cache service
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - atonix-network

volumes:
  postgres_data:
  redis_data:
  app_media:
  app_logs:

networks:
  atonix-network:
    driver: bridge